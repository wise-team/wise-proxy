pid        /var/run/nginx.pid;



################
#     Logs     #
################
error_log  stderr warn;
log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
access_log /dev/stdout main;



#################
# Optimizations #
#################
worker_processes  4;
events {
    worker_connections  1024;
}

client_body_buffer_size 1m;
client_header_buffer_size 2k;
client_max_body_size 1m;
large_client_header_buffers 2 1k;
client_body_timeout 12;
client_header_timeout 12;
keepalive_timeout 65;
send_timeout 10;
gzip on;



#################
#  Application  #
#################
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    #tcp_nopush     on;


    # Redirect all :80 servers to 443 (http -> https)
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        location / {
            rewrite ^ https://$host$request_uri? permanent;
        }

        location ^~ /.well-known {
            allow all;
            #ยง 'root  ' + data.config.proxy.certs.webroot + ';'
            root  /cert/webroot;
        }
    }

    ######
    # Configure TLS
    ssl                       on;

    add_header                Strict-Transport-Security "max-age=31536000" always;

    ssl_session_cache         shared:SSL:20m;
    ssl_session_timeout       10m;

    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_stapling              on;
    ssl_stapling_verify       on;
    resolver                  8.8.8.8 8.8.4.4;

    ssl_certificate           /cert/letsencrypt_etc/$hostname/fullchain.pem;
    ssl_certificate_key       /cert/letsencrypt_etc/live/$hostname/privkey.pem;
    ssl_trusted_certificate   /cert/letsencrypt_etc/live/$hostname/chain.pem;

    server {
        listen      443           ssl http2;
        listen [::]:443           ssl http2;
        server_name _;

        location / {
            root /html/main;
            try_files $uri $uri/ /index.html;
        }
    }
}


